version: 2

jobs:
 # must be called build for local circle cli to work
 # is actually unit tests
 build:
  docker:
   - image: holochain/holochain-rust:circle-incremental
  steps:
   - checkout

   - run: nix-shell --run hc-fmt-check
   - run: nix-shell --run hc-test

 integration-tests:
  docker:
   - image: holochain/holochain-rust:circle-rust-warm
  steps:
   - checkout

   - run:
       name: install cmd
       command: nix-shell --run hc-install-cmd

   # test the node container build
   # todo - this cache doesn't stop recompilation of rust on node container
   - restore_cache:
       keys:
         - v1-nodejs_container-{{ checksum "nodejs_container/package.json" }}-{{ checksum "nodejs_container/publish.js" }}-{{ checksum "nodejs_container/yarn.lock" }}-{{ checksum "nodejs_container/native/Cargo.toml" }}
   - run:
       name: install node container
       command: nix-shell --run hc-install-node-container
   - save_cache:
       key: v1-nodejs_container-{{ checksum "nodejs_container/package.json" }}-{{ checksum "nodejs_container/publish.js" }}-{{ checksum "nodejs_container/yarn.lock" }}-{{ checksum "nodejs_container/native/Cargo.toml" }}
       paths:
         - "./nodejs_container/native/target"
         - "./nodejs_container/node_modules"
         - "./nodejs_container/native/Cargo.lock"

   - run:
       name: app spec tests
       command: nix-shell --run hc-test-app-spec

 # https://circleci.com/docs/2.0/building-docker-images/
 docker.0:
  machine: true
  steps:
   - checkout
   - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
   - run: docker build -f .circleci/Dockerfile.00.start -t holochain/holochain-rust:circle.00.start .
   - run: docker push holochain/holochain-rust:circle.00.start
 docker.1:
  machine: true
  steps:
   - checkout
   - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
   - run: docker build -f .circleci/Dockerfile.01.warm.nix -t holochain/holochain-rust:circle.01.warm.nix .
   - run: docker push holochain/holochain-rust:circle.01.warm.nix

workflows:
 version: 2
 tests:
  jobs:
   - build
   - integration-tests
   - docker.0
   - docker.1
