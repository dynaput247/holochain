# needed for wabt-rs
# https://github.com/pepyakin/wabt-rs/blob/master/appveyor.yml#L1
os: Visual Studio 2017

# handy validation tool:
# https://ci.appveyor.com/tools/validate-yaml
# references
# https://crate-ci.github.io/pr/testing.html
# https://github.com/japaric/trust/blob/master/appveyor.yml
environment:
 global:
  RUST_VERSION: nightly-2018-11-28
  TARGET: x86_64-pc-windows-msvc
  WASM_TARGET: wasm32-unknown-unknown
  LIBZMQ_PREFIX: vendor\zmq

# before_build:
#  # https://github.com/zeromq/cppzmq/blob/master/appveyor.yml
#   - if not exist libzmq (
#    appveyor DownloadFile https://github.com/zeromq/libzmq/archive/v%ZMQ_VER%.zip &&
#    7z x v%ZMQ_VER%.zip >NUL &&
#    cmake -H./libzmq-%ZMQ_VER% -Blibzmq-%ZMQ_VER%/build -DCMAKE_INSTALL_PREFIX=libzmq -DENABLE_DRAFTS=ON -DWITH_PERF_TOOL=OFF -DZMQ_BUILD_TESTS=OFF -DENABLE_CPACK=OFF -A%PLATFORM% &&
#    cmake --build libzmq-%ZMQ_VER%/build --target install)
#   - cmake -H. -BBuild -DENABLE_DRAFTS=ON -DCMAKE_PREFIX_PATH=./libzmq -A%PLATFORM%

install:
 # zmq
 - set PATH=%PATH%;%APPVEYOR_BUILD_FOLDER%\vendor\zmq\bin
 - dir %LIB%
 - dir %LIBPATH%
 - copy vendor\zmq\lib %LIB%
 - dir %LIB%
 - dir %LIBPATH%

 # rust
 - ps: >-
     $Env:PATH += ';C:\msys64\usr\bin'
 - curl -sSf -o rustup-init.exe https://win.rustup.rs/
 - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
 - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
 - rustc -Vv
 - cargo -V
 - rustup target add %WASM_TARGET%

cache:
 - C:\Users\appveyor\.rustup
 - C:\Users\appveyor\.cargo

 - .rustup
 - .cargo
 - target

 - core\src\nucleus\actions\wasm-test\.cargo
 - core\src\nucleus\actions\wasm-test\target

 - container_api\wasm-test\.cargo
 - container_api\wasm-test\target

 - hdk-rust\wasm-test\.cargo
 - hdk-rust\wasm-test\target

 - wasm_utils\wasm-test\integration-test\.cargo
 - wasm_utils\wasm-test\integration-test\target

test_script:
 # - set CARGO_HOME=core\src\nucleus\actions\wasm-test\.cargo
 # - cargo build --release --target %WASM_TARGET% --manifest-path core\src\nucleus\actions\wasm-test\Cargo.toml --target-dir core\src\nucleus\actions\wasm-test\target
 #
 # - set CARGO_HOME=container_api\wasm-test\.cargo
 # - cargo build --release --target %WASM_TARGET% --manifest-path container_api\wasm-test\Cargo.toml --target-dir container_api\wasm-test\target
 #
 # - set CARGO_HOME=hdk-rust\wasm-test\.cargo
 # - cargo build --release --target %WASM_TARGET% --manifest-path hdk-rust\wasm-test\Cargo.toml --target-dir hdk-rust\wasm-test\target
 #
 # - set CARGO_HOME=wasm_utils\wasm-test\integration-test\.cargo
 # - cargo build --release --target %WASM_TARGET% --manifest-path wasm_utils\wasm-test\integration-test\Cargo.toml --target-dir wasm_utils\wasm-test\integration-test\target

 # - cargo build --all --release --target %TARGET% --manifest-path Cargo.toml --target-dir target
 - cargo test --all --exclude hc --target %TARGET% --manifest-path Cargo.toml --target-dir target

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
